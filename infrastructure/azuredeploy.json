{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('resume', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Storage Account"
      }
    },
    "cdnProfileName": {
      "type": "string",
      "defaultValue": "[concat('cdn-profile-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the CDN Profile"
      }
    },
    "cdnEndpointName": {
      "type": "string",
      "defaultValue": "[concat('cdn-endpoint-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the CDN Endpoint"
      }
    },
    "customDomainName": {
      "type": "string",
      "defaultValue": "bilalashraf.xyz",
      "metadata": {
        "description": "The custom domain name for the CDN endpoint"
      }
    },
    "cosmosAccountName": {
      "type": "string",
      "defaultValue": "[concat('cosmos-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Cosmos DB account"
      }
    },
    "cosmosTableName": {
      "type": "string",
      "defaultValue": "Counter",
      "metadata": {
        "description": "The name of the Cosmos DB table"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[concat('func-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the function app"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat('plan-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the App Service Plan"
      }
    }
  },
  "variables": {
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
    "functionStorageAccountName": "[concat('func', uniqueString(resourceGroup().id))]",
    "functionStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot",
        "allowBlobPublicAccess": true,
        "minimumTlsVersion": "TLS1_2",
        "staticWebsite": {
          "indexDocument": "index.html",
          "errorDocument404Path": "index.html"
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2020-09-01",
      "name": "[parameters('cdnProfileName')]",
      "location": "global",
      "sku": {
        "name": "Standard_Microsoft"
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints",
      "apiVersion": "2020-09-01",
      "name": "[concat(parameters('cdnProfileName'), '/', parameters('cdnEndpointName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('cdnProfileName'))]",
        "[variables('storageAccountId')]"
      ],
      "properties": {
        "originHostHeader": "[replace(replace(reference(variables('storageAccountId')).primaryEndpoints.web, 'https://', ''), '/', '')]",
        "isHttpAllowed": false,
        "isHttpsAllowed": true,
        "queryStringCachingBehavior": "IgnoreQueryString",
        "contentTypesToCompress": [
          "text/plain",
          "text/html",
          "text/css",
          "application/x-javascript",
          "text/javascript"
        ],
        "isCompressionEnabled": true,
        "origins": [
          {
            "name": "origin1",
            "properties": {
              "hostName": "[replace(replace(reference(variables('storageAccountId')).primaryEndpoints.web, 'https://', ''), '/', '')]",
              "httpPort": 80,
              "httpsPort": 443,
              "originHostHeader": "[replace(replace(reference(variables('storageAccountId')).primaryEndpoints.web, 'https://', ''), '/', '')]",
              "priority": 1,
              "weight": 1000,
              "enabled": true
            }
          }
        ],
        "deliveryPolicy": {
          "rules": [
            {
              "name": "EnforceHTTPS",
              "order": 1,
              "conditions": [
                {
                  "name": "RequestScheme",
                  "parameters": {
                    "typeName": "DeliveryRuleRequestSchemeConditionParameters",
                    "matchValues": [
                      "HTTP"
                    ],
                    "operator": "Equal",
                    "negateCondition": false,
                    "transforms": []
                  }
                }
              ],
              "actions": [
                {
                  "name": "UrlRedirect",
                  "parameters": {
                    "typeName": "DeliveryRuleUrlRedirectActionParameters",
                    "redirectType": "Found",
                    "destinationProtocol": "Https"
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[parameters('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          },
          {
            "name": "EnableTable"
          }
        ],
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/tables",
      "apiVersion": "2021-04-15",
      "name": "[concat(parameters('cosmosAccountName'), '/', parameters('cosmosTableName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmosTableName')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('functionStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[variables('functionStorageAccountId')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(variables('functionStorageAccountId'), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(variables('functionStorageAccountId'), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "COSMOS_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName'))).documentEndpoint]"
            },
            {
              "name": "COSMOS_KEY",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), '2021-04-15').primaryMasterKey]"
            },
            {
              "name": "COSMOS_TABLE",
              "value": "[parameters('cosmosTableName')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "linuxFxVersion": "Python|3.9"
        },
        "httpsOnly": true
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "cdnEndpointUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Cdn/profiles/endpoints', parameters('cdnProfileName'), parameters('cdnEndpointName'))).hostName)]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName'))).defaultHostName)]"
    }
  }
}